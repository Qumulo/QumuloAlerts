{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 2,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 36,
      "panels": [],
      "title": "Cluster Info",
      "type": "row"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "9nOXzqPVk"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "center",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 15,
        "x": 0,
        "y": 1
      },
      "id": 7,
      "options": {
        "footer": {
          "countRows": false,
          "enablePagination": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": false,
            "displayName": "_value {_field=\"value\", _start=\"2023-04-25 23:03:21.013 +0000 UTC\", _stop=\"2023-04-26 00:03:21.013 +0000 UTC\", cluster_name=\"groot.eng.qumulo.com\", max_drive_failures=\"2\", max_node_failures=\"1\", name=\"groot\", platform=\"hardware\", service_model=\"self_hosted\", uuid=\"af6d3031-a169-4f5c-a569-aa65b90327ef\", version=\"Qumulo Core 6.0.2\"}"
          }
        ]
      },
      "pluginVersion": "9.4.7",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "9nOXzqPVk"
          },
          "hide": false,
          "query": "measurement = \"qumulo_info\"\nfields = [\"cluster_name\",\"uuid\",\"max_drive_failures\", \"max_node_failures\", \"platform\",\"service_model\", \"version\"]\nfrom(bucket: \"Qumulo Alerts Metrics\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == measurement)\n  |> filter(fn: (r) => r[\"cluster_name\"] == \"${Cluster}\")\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> keyValues(keyColumns: fields)\n  |> group()\n  |> last()\n  |> keep(columns: fields)\n  |> rename(columns: {cluster_name: \"Cluster Name\", uuid: \"UUID\",platform: \"Platform\",max_drive_failures: \"Max Drive Failures\", max_node_failures: \"Max Node Failures\", service_model: \"Service Model\", version: \"Version\"})",
          "refId": "B"
        }
      ],
      "title": "Cluster Details",
      "transformations": [
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {
              "Cluster Name": 0,
              "Max Drive Failures": 3,
              "Max Node Failures": 4,
              "Platform": 5,
              "Service Model": 6,
              "UUID": 1,
              "Version": 2
            },
            "renameByName": {}
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "9nOXzqPVk"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "center",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 5,
        "x": 15,
        "y": 1
      },
      "id": 12,
      "options": {
        "footer": {
          "countRows": false,
          "enablePagination": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": false,
            "displayName": "_value {_field=\"value\", _start=\"2023-04-25 23:03:21.013 +0000 UTC\", _stop=\"2023-04-26 00:03:21.013 +0000 UTC\", cluster_name=\"groot.eng.qumulo.com\", max_drive_failures=\"2\", max_node_failures=\"1\", name=\"groot\", platform=\"hardware\", service_model=\"self_hosted\", uuid=\"af6d3031-a169-4f5c-a569-aa65b90327ef\", version=\"Qumulo Core 6.0.2\"}"
          }
        ]
      },
      "pluginVersion": "9.4.7",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "9nOXzqPVk"
          },
          "hide": false,
          "query": "measurement = \"alerts_ad_info\"\nfields = [\"domain\",\"base_dn\"]\nfrom(bucket: \"Qumulo Alerts Metrics\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == measurement)\n  |> filter(fn: (r) => r[\"cluster_name\"] == \"${Cluster}\")\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> keyValues(keyColumns: fields)\n  |> group()\n  |> last()\n  |> keep(columns: fields)\n  |> rename(columns: {domain: \"Domain\", base_dn: \"Base DN\"})\n\n",
          "refId": "B"
        }
      ],
      "title": "Domain",
      "transformations": [
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {
              "Base DN": 1,
              "Domain": 0
            },
            "renameByName": {}
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "9nOXzqPVk"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "center",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 4,
        "x": 20,
        "y": 1
      },
      "id": 16,
      "options": {
        "footer": {
          "countRows": false,
          "enablePagination": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": false,
            "displayName": "_value {_field=\"value\", _start=\"2023-04-25 23:03:21.013 +0000 UTC\", _stop=\"2023-04-26 00:03:21.013 +0000 UTC\", cluster_name=\"groot.eng.qumulo.com\", max_drive_failures=\"2\", max_node_failures=\"1\", name=\"groot\", platform=\"hardware\", service_model=\"self_hosted\", uuid=\"af6d3031-a169-4f5c-a569-aa65b90327ef\", version=\"Qumulo Core 6.0.2\"}"
          }
        ]
      },
      "pluginVersion": "9.4.7",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "9nOXzqPVk"
          },
          "hide": false,
          "query": "measurement = \"alerts_audit_info\"\nfields = [\"server_address\",\"server_port\"]\nfrom(bucket: \"Qumulo Alerts Metrics\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == measurement)\n  |> filter(fn: (r) => r[\"cluster_name\"] == \"${Cluster}\")\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> keyValues(keyColumns: fields)\n  |> group()\n  |> last()\n  |> keep(columns: fields)\n  |> rename(columns: {server_address: \"Syslog Server\", server_port: \"Port\"})\n\n",
          "refId": "B"
        }
      ],
      "title": "Syslog Server",
      "type": "table"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 5
      },
      "id": 34,
      "panels": [],
      "title": "Users and Groups",
      "type": "row"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "9nOXzqPVk"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "left",
            "cellOptions": {
              "type": "auto"
            },
            "filterable": true,
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Primary Group"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 143
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "UID"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 132
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 6,
        "w": 12,
        "x": 0,
        "y": 6
      },
      "id": 18,
      "options": {
        "footer": {
          "countRows": false,
          "enablePagination": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "frameIndex": 0,
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "9.4.7",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "9nOXzqPVk"
          },
          "hide": false,
          "query": "measurement = \"alerts_users_info\"\nfields = [\"name\",\"uid\", \"primary_group\", \"sid\"]\nfrom(bucket: \"Qumulo Alerts Metrics\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == measurement)\n  |> filter(fn: (r) => r[\"cluster_name\"] == \"${Cluster}\")\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> keyValues(keyColumns: fields)\n  |> group()\n  |> keep(columns: fields)\n  |> unique(column: \"name\")\n  |> rename(columns: {name: \"User Name\", uid: \"UID\", primary_group: \"Primary Group\", sid: \"SID\"})",
          "refId": "B"
        }
      ],
      "title": "Local Users",
      "transformations": [
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {
              "Primary Group": 2,
              "SID": 3,
              "UID": 1,
              "User Name": 0
            },
            "renameByName": {}
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "9nOXzqPVk"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "left",
            "cellOptions": {
              "type": "auto"
            },
            "filterable": true,
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 6,
        "w": 12,
        "x": 12,
        "y": 6
      },
      "id": 17,
      "options": {
        "footer": {
          "countRows": false,
          "enablePagination": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "frameIndex": 0,
        "showHeader": true,
        "sortBy": [
          {
            "desc": false,
            "displayName": "value {cluster_name=\"groot.eng.qumulo.com\", name=\"Users\", sid=\"S-1-5-21-3278872703-1174929097-1958881360-513\"}"
          }
        ]
      },
      "pluginVersion": "9.4.7",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "9nOXzqPVk"
          },
          "hide": false,
          "query": "measurement = \"alerts_groups_info\"\nfields = [\"name\",\"gid\", \"sid\"]\nfrom(bucket: \"Qumulo Alerts Metrics\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == measurement)\n  |> filter(fn: (r) => r[\"cluster_name\"] == \"${Cluster}\")\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> keyValues(keyColumns: fields)\n  |> group()\n  |> keep(columns: fields)\n  |> unique(column: \"name\")\n  |> rename(columns: {name: \"Group Name\", gid: \"GID\", sid: \"SID\"})",
          "refId": "B"
        }
      ],
      "title": "Local Groups",
      "transformations": [
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {
              "GID": 1,
              "Group Name": 0,
              "SID": 2
            },
            "renameByName": {}
          }
        }
      ],
      "type": "table"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 12
      },
      "id": 32,
      "panels": [],
      "title": "Quotas",
      "type": "row"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "9nOXzqPVk"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "left",
            "cellOptions": {
              "type": "auto"
            },
            "filterable": true,
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "decbytes"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 24,
        "x": 0,
        "y": 13
      },
      "id": 22,
      "options": {
        "footer": {
          "countRows": false,
          "enablePagination": true,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "frameIndex": 0,
        "showHeader": true,
        "sortBy": [
          {
            "desc": false,
            "displayName": "value {cluster_name=\"groot.eng.qumulo.com\", name=\"Users\", sid=\"S-1-5-21-3278872703-1174929097-1958881360-513\"}"
          }
        ]
      },
      "pluginVersion": "9.4.7",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "9nOXzqPVk"
          },
          "hide": false,
          "query": "import \"join\"\n\nmeasurement = \"alerts_quota_entries\"\nfields = [\"path\", \"limit\", \"capacity_usage\"]\n\nleft =\n  from(bucket: \"Qumulo Alerts Metrics\")\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] == measurement)\n    |> filter(fn: (r) => r[\"cluster_name\"] == \"${Cluster}\")\n    |> filter(fn: (r) => r[\"entry_type\"] == \"capacity_usage\")\n    |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n    |> group()\n    |> unique(column: \"path\")\n\nright =\n  from(bucket: \"Qumulo Alerts Metrics\")\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] == measurement)\n    |> filter(fn: (r) => r[\"cluster_name\"] == \"${Cluster}\")\n    |> filter(fn: (r) => r[\"entry_type\"] == \"limit\")\n    |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n    |> group()\n    |> unique(column: \"path\")\n\njoin.full(\n    left: left,\n    right: right,\n    on: (l, r) => l.path == r.path,\n    as: (l, r) => {\n        path = if exists l.path then l.path else r.path\n\n        return {path: path, capacity_usage: l._value, limit: r._value}\n    },\n)\n|> rename(columns: {path: \"Path\", limit: \"Limit\", capacity_usage: \"Capacity Usage\"})",
          "refId": "B"
        }
      ],
      "title": "Quotas",
      "transformations": [
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {
              "Capacity Usage": 1,
              "Limit": 2,
              "Path": 0
            },
            "renameByName": {}
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "9nOXzqPVk"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "decbytes"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 3,
        "x": 0,
        "y": 20
      },
      "id": 23,
      "maxPerRow": 8,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "9.4.7",
      "repeat": "QuotaPath",
      "repeatDirection": "h",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "9nOXzqPVk"
          },
          "hide": false,
          "query": "import \"join\"\n\nmeasurement = \"alerts_quota_entries\"\nfields = [\"path\", \"limit\", \"capacity_usage\"]\n\nleft =\n  from(bucket: \"Qumulo Alerts Metrics\")\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] == measurement)\n    |> filter(fn: (r) => r[\"cluster_name\"] == \"${Cluster}\")\n    |> filter(fn: (r) => r[\"path\"] == \"${QuotaPath}\")\n    |> filter(fn: (r) => r[\"entry_type\"] == \"capacity_usage\")\n    |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n    |> group(columns: [\"path\"])\n\nright =\n  from(bucket: \"Qumulo Alerts Metrics\")\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] == measurement)\n    |> filter(fn: (r) => r[\"cluster_name\"] == \"${Cluster}\")\n    |> filter(fn: (r) => r[\"path\"] == \"${QuotaPath}\")\n    |> filter(fn: (r) => r[\"entry_type\"] == \"limit\")\n    |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n    |> group(columns: [\"path\"])\n\njoin.full(\n    left: left,\n    right: right,\n    on: (l, r) => l.path == r.path and l._time == r._time,\n    as: (l, r) => {\n        time = if exists l._time then l._time else r._time\n        path = if exists l.path then l.path else r.path\n\n        return {_time: time, path: path, capacity_usage: l._value, limit: r._value}\n    },\n)\n|> rename(columns: {path: \"Path\", limit: \"Limit\", capacity_usage: \"Capacity Usage\"})",
          "refId": "B"
        }
      ],
      "title": "${QuotaPath}",
      "transformations": [
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {
              "Capacity Usage": 1,
              "Limit": 2,
              "Path": 0
            },
            "renameByName": {}
          }
        }
      ],
      "type": "timeseries"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 36
      },
      "id": 30,
      "panels": [],
      "title": "SMB Shares",
      "type": "row"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "9nOXzqPVk"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "left",
            "cellOptions": {
              "type": "auto"
            },
            "filterable": true,
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "decbytes"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 24,
        "x": 0,
        "y": 37
      },
      "id": 20,
      "options": {
        "footer": {
          "countRows": false,
          "enablePagination": true,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "frameIndex": 0,
        "showHeader": true,
        "sortBy": [
          {
            "desc": false,
            "displayName": "value {cluster_name=\"groot.eng.qumulo.com\", name=\"Users\", sid=\"S-1-5-21-3278872703-1174929097-1958881360-513\"}"
          }
        ]
      },
      "pluginVersion": "9.4.7",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "9nOXzqPVk"
          },
          "hide": false,
          "query": "measurement = \"alerts_share_entries\"\nfields = [\"fs_path\",\"share_name\", \"_value\"]\nfrom(bucket: \"Qumulo Alerts Metrics\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == measurement)\n  |> filter(fn: (r) => r[\"cluster_name\"] == \"${Cluster}\")\n  |> filter(fn: (r) => r[\"entry_type\"] == \"capacity\")\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> group()\n  |> keep(columns: fields)\n  |> unique(column: \"share_name\")\n  |> rename(columns: {fs_path: \"File System Path\", share_name: \"Share Name\", _value: \"Capacity\"})",
          "refId": "B"
        }
      ],
      "title": "SMB Shares",
      "transformations": [
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {
              "Capacity": 2,
              "File System Path": 1,
              "Share Name": 0
            },
            "renameByName": {}
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "9nOXzqPVk"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "displayName": "${__field.labels.entry_type}",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "decbytes"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 2.6666666666666665,
        "x": 0,
        "y": 45
      },
      "id": 42,
      "maxPerRow": 12,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "9.4.7",
      "repeat": "ShareName",
      "repeatDirection": "h",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "9nOXzqPVk"
          },
          "hide": false,
          "query": "measurement = \"alerts_share_entries\"\n\n\nfrom(bucket: \"Qumulo Alerts Metrics\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == measurement)\n  |> filter(fn: (r) => r[\"cluster_name\"] == \"${Cluster}\")\n  |> filter(fn: (r) => r[\"share_name\"] == \"${ShareName}\")\n  |> filter(fn: (r) => r[\"entry_type\"] == \"capacity\")\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> yield(name: \"last\")",
          "refId": "B"
        }
      ],
      "title": "${ShareName}",
      "transformations": [
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {
              "Capacity": 2,
              "File System Path": 1,
              "Share Name": 0
            },
            "renameByName": {}
          }
        }
      ],
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "9nOXzqPVk"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            }
          },
          "displayName": "${__field.labels.entry_type}",
          "mappings": [],
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 2.6666666666666665,
        "x": 0,
        "y": 53
      },
      "id": 63,
      "maxPerRow": 12,
      "options": {
        "legend": {
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "pieType": "donut",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "9.4.7",
      "repeat": "ShareName",
      "repeatDirection": "h",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "9nOXzqPVk"
          },
          "hide": false,
          "query": "measurement = \"alerts_share_entries\"\n\n\nfrom(bucket: \"Qumulo Alerts Metrics\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == measurement)\n  |> filter(fn: (r) => r[\"cluster_name\"] == \"${Cluster}\")\n  |> filter(fn: (r) => r[\"share_name\"] == \"${ShareName}\")\n  |> filter(fn: (r) => r[\"entry_type\"] == \"alternative_data_stream\" or r[\"entry_type\"] == \"file\" or r[\"entry_type\"] == \"directory\" or r[\"entry_type\"] == \"other\" or r[\"entry_type\"] == \"symlink\")\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> yield(name: \"last\")\n",
          "refId": "B"
        }
      ],
      "title": "${ShareName}",
      "transformations": [],
      "type": "piechart"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 61
      },
      "id": 44,
      "panels": [],
      "title": "NFS Exports",
      "type": "row"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "9nOXzqPVk"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "left",
            "cellOptions": {
              "type": "auto"
            },
            "filterable": true,
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "decbytes"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 6,
        "w": 24,
        "x": 0,
        "y": 62
      },
      "id": 19,
      "options": {
        "footer": {
          "countRows": false,
          "enablePagination": true,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "frameIndex": 0,
        "showHeader": true,
        "sortBy": [
          {
            "desc": false,
            "displayName": "value {cluster_name=\"groot.eng.qumulo.com\", name=\"Users\", sid=\"S-1-5-21-3278872703-1174929097-1958881360-513\"}"
          }
        ]
      },
      "pluginVersion": "9.4.7",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "9nOXzqPVk"
          },
          "hide": false,
          "query": "measurement = \"alerts_export_entries\"\nfields = [\"fs_path\",\"export_path\", \"_value\"]\nfrom(bucket: \"Qumulo Alerts Metrics\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == measurement)\n  |> filter(fn: (r) => r[\"cluster_name\"] == \"${Cluster}\")\n  |> filter(fn: (r) => r[\"entry_type\"] == \"capacity\")\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> group()\n  |> keep(columns: fields)\n  |> unique(column: \"export_path\")\n  |> rename(columns: {fs_path: \"File System Path\", export_path: \"Export Path\", _value: \"Capacity\"})",
          "refId": "B"
        }
      ],
      "title": "NFS Exports",
      "transformations": [
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {
              "Capacity": 2,
              "Export Path": 1,
              "File System Path": 0
            },
            "renameByName": {}
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "9nOXzqPVk"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 1,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "displayName": "${__field.labels.entry_type}",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "decbytes"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 9,
        "w": 6,
        "x": 0,
        "y": 68
      },
      "id": 53,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "9.4.7",
      "repeat": "ExportPath",
      "repeatDirection": "h",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "9nOXzqPVk"
          },
          "hide": false,
          "query": "measurement = \"alerts_export_entries\"\n\n\nfrom(bucket: \"Qumulo Alerts Metrics\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == measurement)\n  |> filter(fn: (r) => r[\"cluster_name\"] == \"${Cluster}\")\n  |> filter(fn: (r) => r[\"export_path\"] == \"${ExportPath}\")\n  |> filter(fn: (r) => r[\"entry_type\"] == \"capacity\")\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> yield(name: \"last\")",
          "refId": "B"
        }
      ],
      "title": "${ExportPath}",
      "transformations": [
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {
              "Capacity": 2,
              "Export Path": 1,
              "File System Path": 0
            },
            "renameByName": {}
          }
        }
      ],
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "9nOXzqPVk"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            }
          },
          "displayName": "${__field.labels.entry_type}",
          "mappings": [],
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 6,
        "x": 0,
        "y": 77
      },
      "id": 73,
      "options": {
        "displayLabels": [],
        "legend": {
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "pieType": "donut",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "9.4.7",
      "repeat": "ExportPath",
      "repeatDirection": "h",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "9nOXzqPVk"
          },
          "hide": false,
          "query": "measurement = \"alerts_export_entries\"\n\n\nfrom(bucket: \"Qumulo Alerts Metrics\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == measurement)\n  |> filter(fn: (r) => r[\"cluster_name\"] == \"${Cluster}\")\n  |> filter(fn: (r) => r[\"export_path\"] == \"${ExportPath}\")\n  |> filter(fn: (r) => r[\"entry_type\"] == \"alternative_data_stream\" or r[\"entry_type\"] == \"file\" or r[\"entry_type\"] == \"directory\" or r[\"entry_type\"] == \"other\" or r[\"entry_type\"] == \"symlink\")\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> yield(name: \"last\")",
          "refId": "B"
        }
      ],
      "title": "${ExportPath}",
      "transformations": [
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {
              "Capacity": 2,
              "Export Path": 1,
              "File System Path": 0
            },
            "renameByName": {}
          }
        }
      ],
      "type": "piechart"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 85
      },
      "id": 93,
      "panels": [],
      "title": "Node Details",
      "type": "row"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "9nOXzqPVk"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [
            {
              "options": {
                "0": {
                  "index": 1,
                  "text": "UP"
                },
                "1": {
                  "index": 0,
                  "text": "DOWN"
                }
              },
              "type": "value"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 1
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 5,
        "w": 2,
        "x": 0,
        "y": 86
      },
      "id": 95,
      "maxPerRow": 12,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "9.4.7",
      "repeat": "Node",
      "repeatDirection": "v",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "9nOXzqPVk"
          },
          "query": "from(bucket: \"Qumulo Alerts Metrics\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"qumulo_quorum_node_is_offline\")\n  |> filter(fn: (r) => r[\"cluster_name\"] == \"${Cluster}\")\n  |> filter(fn: (r) => r[\"node_id\"] == \"${Node}\")\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> yield(name: \"last\")",
          "refId": "A"
        }
      ],
      "title": "Node-${Node}",
      "transformations": [],
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "9nOXzqPVk"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "center",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 5,
        "w": 2,
        "x": 2,
        "y": 86
      },
      "id": 167,
      "options": {
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": false
      },
      "pluginVersion": "9.4.7",
      "repeat": "Node",
      "repeatDirection": "v",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "9nOXzqPVk"
          },
          "hide": false,
          "query": "measurement = \"qumulo_node_info\"\nfields = [\"node_model\"]\nfrom(bucket: \"Qumulo Alerts Metrics\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == measurement)\n  |> filter(fn: (r) => r[\"cluster_name\"] == \"${Cluster}\")\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> keyValues(keyColumns: fields)\n  |> group()\n  |> last()\n  |> keep(columns: fields)\n  |> rename(columns: {node_model: \"Node Model\"})",
          "refId": "B"
        }
      ],
      "title": "Node Model",
      "transformations": [
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {
              "Cluster Name": 0,
              "Max Drive Failures": 3,
              "Max Node Failures": 4,
              "Platform": 5,
              "Service Model": 6,
              "UUID": 1,
              "Version": 2
            },
            "renameByName": {}
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "9nOXzqPVk"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "displayName": "${__field.labels.fan}",
          "mappings": [],
          "max": 15000,
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 12000
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 5,
        "w": 3,
        "x": 4,
        "y": 86
      },
      "id": 108,
      "maxPerRow": 12,
      "options": {
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showThresholdLabels": false,
        "showThresholdMarkers": true
      },
      "pluginVersion": "9.4.7",
      "repeat": "Node",
      "repeatDirection": "v",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "9nOXzqPVk"
          },
          "query": "from(bucket: \"Qumulo Alerts Metrics\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"qumulo_fan_speed_rpm\")\n  |> filter(fn: (r) => r[\"cluster_name\"] == \"${Cluster}\")\n  |> filter(fn: (r) => r[\"node_id\"] == \"${Node}\")\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> yield(name: \"last\")",
          "refId": "A"
        }
      ],
      "title": "Fan Speeds",
      "transformations": [],
      "type": "gauge"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "9nOXzqPVk"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "#EAB839",
                "value": 60
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "celsius"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 5,
        "w": 2,
        "x": 7,
        "y": 86
      },
      "id": 132,
      "maxPerRow": 12,
      "options": {
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showThresholdLabels": false,
        "showThresholdMarkers": true
      },
      "pluginVersion": "9.4.7",
      "repeat": "Node",
      "repeatDirection": "v",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "9nOXzqPVk"
          },
          "hide": false,
          "query": "from(bucket: \"Qumulo Alerts Metrics\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"qumulo_cpu_temperature_celsius\")\n  |> filter(fn: (r) => r[\"cluster_name\"] == \"${Cluster}\")\n  |> filter(fn: (r) => r[\"node_id\"] == \"${Node}\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> yield(name: \"mean\")",
          "refId": "B"
        }
      ],
      "title": "CPU Temperatures",
      "type": "gauge"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "9nOXzqPVk"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "displayName": "${__field.labels.disk_type} bay-${__field.labels.drive_bay}",
          "mappings": [
            {
              "options": {
                "0": {
                  "index": 1,
                  "text": "HEALTHY"
                },
                "1": {
                  "index": 0,
                  "text": "UNHEALTHY"
                }
              },
              "type": "value"
            }
          ],
          "max": 100,
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 1
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 5,
        "w": 8,
        "x": 9,
        "y": 86
      },
      "id": 270,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "9.4.7",
      "repeat": "Node",
      "repeatDirection": "v",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "9nOXzqPVk"
          },
          "query": "from(bucket: \"Qumulo Alerts Metrics\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"qumulo_disk_is_unhealthy\")\n  |> filter(fn: (r) => r[\"cluster_name\"] == \"${Cluster}\")\n  |> filter(fn: (r) => r[\"node_id\"] == \"${Node}\")\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> yield(name: \"last\")",
          "refId": "A"
        }
      ],
      "title": "Disk Health Status",
      "transformations": [],
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "9nOXzqPVk"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "displayName": "${__field.labels.disk_type} bay-${__field.labels.drive_bay}",
          "mappings": [],
          "max": 100,
          "min": 0,
          "thresholds": {
            "mode": "percentage",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "value {cluster_name=\"groot.eng.qumulo.com\", disk_type=\"ssd\", drive_bay=\"1\", node_id=\"10\"}"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Drive Bay 1"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "value {cluster_name=\"groot.eng.qumulo.com\", disk_type=\"ssd\", drive_bay=\"2\", node_id=\"10\"}"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Drive Bay 2"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 5,
        "w": 4,
        "x": 17,
        "y": 86
      },
      "id": 327,
      "options": {
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showThresholdLabels": false,
        "showThresholdMarkers": true
      },
      "pluginVersion": "9.4.7",
      "repeat": "Node",
      "repeatDirection": "v",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "9nOXzqPVk"
          },
          "query": "from(bucket: \"Qumulo Alerts Metrics\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"qumulo_disk_endurance_percent\")\n  |> filter(fn: (r) => r[\"cluster_name\"] == \"${Cluster}\")\n  |> filter(fn: (r) => r[\"node_id\"] == \"${Node}\")\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> yield(name: \"last\")",
          "refId": "A"
        }
      ],
      "title": "Disk Endurances",
      "transformations": [],
      "type": "gauge"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "9nOXzqPVk"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "displayName": "${__field.labels.role} ${__field.labels.interface}",
          "mappings": [
            {
              "options": {
                "0": {
                  "index": 1,
                  "text": "UP"
                },
                "1": {
                  "index": 0,
                  "text": "DOWN"
                }
              },
              "type": "value"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 1
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 5,
        "w": 3,
        "x": 21,
        "y": 86
      },
      "id": 395,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "9.4.7",
      "repeat": "Node",
      "repeatDirection": "v",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "9nOXzqPVk"
          },
          "query": "from(bucket: \"Qumulo Alerts Metrics\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"qumulo_network_interface_is_down\")\n  |> filter(fn: (r) => r[\"cluster_name\"] == \"${Cluster}\")\n  |> filter(fn: (r) => r[\"node_id\"] == \"${Node}\")\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> yield(name: \"last\")",
          "refId": "A"
        }
      ],
      "title": "NIC Status",
      "transformations": [],
      "type": "stat"
    }
  ],
  "refresh": "1m",
  "revision": 1,
  "schemaVersion": 38,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {
          "selected": false,
          "text": "groot.eng.qumulo.com",
          "value": "groot.eng.qumulo.com"
        },
        "datasource": {
          "type": "influxdb",
          "uid": "9nOXzqPVk"
        },
        "definition": "from(bucket: \"Qumulo Alerts Metrics\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"qumulo_node_info\")\n  |> keyValues(keyColumns: [\"cluster_name\"])\n  |> group()\n  |> keep(columns: [\"cluster_name\"])\n  |> distinct(column: \"cluster_name\")",
        "hide": 0,
        "includeAll": false,
        "label": "Cluster",
        "multi": false,
        "name": "Cluster",
        "options": [],
        "query": "from(bucket: \"Qumulo Alerts Metrics\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"qumulo_node_info\")\n  |> keyValues(keyColumns: [\"cluster_name\"])\n  |> group()\n  |> keep(columns: [\"cluster_name\"])\n  |> distinct(column: \"cluster_name\")",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {
          "selected": false,
          "text": "All",
          "value": "$__all"
        },
        "datasource": {
          "type": "influxdb",
          "uid": "9nOXzqPVk"
        },
        "definition": "from(bucket: \"Qumulo Alerts Metrics\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"alerts_quota_entries\")\n  |> filter(fn: (r) => r[\"cluster_name\"] == \"${Cluster}\")\n  |> keyValues(keyColumns: [\"path\"])\n  |> group()\n  |> keep(columns: [\"path\"])\n  |> distinct(column: \"path\")",
        "hide": 2,
        "includeAll": true,
        "label": "QuotaPath",
        "multi": false,
        "name": "QuotaPath",
        "options": [],
        "query": "from(bucket: \"Qumulo Alerts Metrics\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"alerts_quota_entries\")\n  |> filter(fn: (r) => r[\"cluster_name\"] == \"${Cluster}\")\n  |> keyValues(keyColumns: [\"path\"])\n  |> group()\n  |> keep(columns: [\"path\"])\n  |> distinct(column: \"path\")",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {
          "selected": false,
          "text": "All",
          "value": "$__all"
        },
        "datasource": {
          "type": "influxdb",
          "uid": "9nOXzqPVk"
        },
        "definition": "from(bucket: \"Qumulo Alerts Metrics\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"alerts_share_entries\")\n  |> filter(fn: (r) => r[\"cluster_name\"] == \"${Cluster}\")\n  |> keyValues(keyColumns: [\"share_name\"])\n  |> group()\n  |> keep(columns: [\"share_name\"])\n  |> distinct(column: \"share_name\")",
        "hide": 2,
        "includeAll": true,
        "label": "ShareName",
        "multi": false,
        "name": "ShareName",
        "options": [],
        "query": "from(bucket: \"Qumulo Alerts Metrics\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"alerts_share_entries\")\n  |> filter(fn: (r) => r[\"cluster_name\"] == \"${Cluster}\")\n  |> keyValues(keyColumns: [\"share_name\"])\n  |> group()\n  |> keep(columns: [\"share_name\"])\n  |> distinct(column: \"share_name\")",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {
          "selected": false,
          "text": "All",
          "value": "$__all"
        },
        "datasource": {
          "type": "influxdb",
          "uid": "9nOXzqPVk"
        },
        "definition": "from(bucket: \"Qumulo Alerts Metrics\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"alerts_export_entries\")\n  |> filter(fn: (r) => r[\"cluster_name\"] == \"${Cluster}\")\n  |> keyValues(keyColumns: [\"export_path\"])\n  |> group()\n  |> keep(columns: [\"export_path\"])\n  |> distinct(column: \"export_path\")",
        "hide": 2,
        "includeAll": true,
        "label": "ExportPath",
        "multi": false,
        "name": "ExportPath",
        "options": [],
        "query": "from(bucket: \"Qumulo Alerts Metrics\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"alerts_export_entries\")\n  |> filter(fn: (r) => r[\"cluster_name\"] == \"${Cluster}\")\n  |> keyValues(keyColumns: [\"export_path\"])\n  |> group()\n  |> keep(columns: [\"export_path\"])\n  |> distinct(column: \"export_path\")",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {
          "selected": false,
          "text": "All",
          "value": "$__all"
        },
        "datasource": {
          "type": "influxdb",
          "uid": "9nOXzqPVk"
        },
        "definition": "from(bucket: \"Qumulo Alerts Metrics\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"qumulo_node_info\")\n  |> filter(fn: (r) => r[\"cluster_name\"] == \"${Cluster}\")\n  |> keyValues(keyColumns: [\"node_id\"])\n  |> group()\n  |> keep(columns: [\"node_id\"])\n  |> distinct(column: \"node_id\")",
        "hide": 2,
        "includeAll": true,
        "label": "Node",
        "multi": false,
        "name": "Node",
        "options": [],
        "query": "from(bucket: \"Qumulo Alerts Metrics\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"qumulo_node_info\")\n  |> filter(fn: (r) => r[\"cluster_name\"] == \"${Cluster}\")\n  |> keyValues(keyColumns: [\"node_id\"])\n  |> group()\n  |> keep(columns: [\"node_id\"])\n  |> distinct(column: \"node_id\")",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "now-5m",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "",
  "title": "Cluster Details",
  "uid": "ZPtMLzy4k",
  "version": 7,
  "weekStart": ""
}
